# render.yaml
# Este arquivo define a configuração para implantar o projeto Jeci Store no Render.com.

services:
  - type: web # Define este serviço como um aplicativo web
    name: jecistore # Nome do seu serviço web no Render
    env: python # O ambiente de tempo de execução é Python
    # NOVO: Informa ao Render onde encontrar os arquivos estáticos coletados
    static_files_path: staticfiles 
    # Comando de construção: instala dependências, coleta arquivos estáticos e executa migrações
    buildCommand: |
      set -e # Sai imediatamente se um comando falhar
      pip install -r requirements.txt # Instala as dependências listadas em requirements.txt
      python manage.py collectstatic --noinput # Coleta todos os arquivos estáticos
      python manage.py migrate # Aplica as migrações do banco de dados
      
      # --- Debugging para o Superusuário ---
      echo "Verificando a existência de manage.py..."
      ls -l manage.py
      echo "Verificando a existência do comando createsuperuser_if_not_exists.py..."
      ls -l store/management/commands/createsuperuser_if_not_exists.py
      echo "Tentando criar superusuário se não existir..."
      python manage.py createsuperuser_if_not_exists
      echo "Comando createsuperuser_if_not_exists executado."
      # --- Fim do Debugging ---

    # Comando de inicialização: usa Gunicorn para servir a aplicação Django
    startCommand: gunicorn jecistore_project.wsgi:application --bind 0.0.0.0:$PORT
    envVars: # Variáveis de ambiente para o seu aplicativo Django
      - key: PYTHON_VERSION # Define a versão do Python
        value: 3.10.14 # <--- ALINHE ESTE VALOR com a versão do Python que você está usando localmente
      - key: DJANGO_SECRET_KEY # Chave secreta do Django
        generateValue: true # O Render pode gerar um valor seguro para você
      - key: DJANGO_DEBUG # Modo de depuração do Djangao
        value: "False" # <--- SEMPRE defina como "False" em produção
      - key: WEB_CONCURRENCY # Número de workers Gunicorn (ajuste com base nos núcleos da CPU do seu servidor)
        value: 4 # Um bom ponto de partida, ajuste conforme necessário
      # O Render pode injetar a URL completa do banco de dados, que django-environ usa.
      - key: DATABASE_URL # <--- NOVO: Variável de ambiente para a URL completa do banco de dados
        fromDatabase:
          name: jecistore-database # Nome do banco de dados PostgreSQL
          property: connectionString # Obtém a string de conexão completa
      # As variáveis DB_NAME, DB_USER, etc. não são estritamente necessárias se DATABASE_URL for usada,
      # mas o django-environ pode usá-las como fallback se DATABASE_URL não estiver presente.
      # Para clareza, você pode removê-las se usar DATABASE_URL.
      # - key: DB_NAME
      #   fromDatabase:
      #     name: jecistore-database
      #     property: database
      # - key: DB_USER
      #   fromDatabase:
      #     name: jecistore-database
      #     property: user
      # - key: DB_PASSWORD
      #   fromDatabase:
      #     name: jecistore-database
      #     property: password
      # - key: DB_HOST
      #   fromDatabase:
      #     name: jecistore-database
      #     property: host
      # - key: DB_PORT
      #   fromDatabase:
      #     name: jecistore-database
      #     property: port
      - key: STORE_WHATSAPP_NUMBER # Número do WhatsApp da loja
        value: "5561998504619" # Seu número de WhatsApp (com código do país e DDD)
      - key: DJANGO_ALLOWED_HOSTS # <--- NOVO: Para ALLOWED_HOSTS em produção
        value: jecistore.onrender.com,127.0.0.1,localhost # CORRIGIDO: Agora usa o domínio correto do Render
                                                  # ADICIONADO: 127.0.0.1 e localhost
      # NOVAS VARIÁVEIS PARA O SUPERUSUÁRIO
      - key: DJANGO_SUPERUSER_USERNAME
        value: jeffmark # Altere para o nome de usuário desejado
      - key: DJANGO_SUPERUSER_EMAIL
        value: jeffersongarcia2013@gmail.com # Altere para o e-mail desejado
      - key: DJANGO_SUPERUSER_PASSWORD
        generateValue: true # O Render pode gerar um valor seguro para você, ou defina um valor fixo
databases: # Configuração do banco de dados
  - name: jecistore-database # Nome do seu banco de dados no Render
    type: postgres # Tipo de banco de dados: PostgreSQL
    plan: free # Plano do banco de dados (pode ser 'standard' para mais recursos em produção)

